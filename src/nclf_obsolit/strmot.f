C*********************************************************************
C*    NAME         :  strmot.f
C*       CONTAINS:
C*    COPYRIGHT 1984 (c) MILLS DATA SYSTEM Inc.  All Rights Reserved.
C*     MODULE NAME AND RELEASE LEVEL 
C*        strmot.f , 25.1
C*     DATE AND TIME OF LAST  MODIFICATION
C*        04/29/15 , 15:10:46
C*********************************************************************
C
C*********************************************************************
C*    E_SUBROUTINE     : subroutine strmot
c*       takes the canonical data saved in the
c*       ranfile by savmot and store them in the subscripted points
c*       and vectors declared in the genpts statement.
C*    PARAMETERS   
C*       INPUT  : 
C*          none
C*       OUTPUT :  
C*          none
C*    RETURNS      : none
C*    SIDE EFFECTS : none
C*    WARNINGS     : none
C********************************************************************/
C
      subroutine strmot

      include 'com8a.com'
      
      common/keycom/keyold, keyhld, istold
      integer*4 keyold, keyhld
      integer*2 istold

      integer*2 igen,iminit,impg,imel,npts
      equivalence (ifl(246),igen),(ifl(247),iminit)
      equivalence (ifl(248),impg),(ifl(249),imel),(ifl(250),npts)

      integer*2 irest(4)
      equivalence (rest,irest)

      real*8 a(9)
      integer*2 itpg,itel,ix,l
c      integer*2 ifl2

c      ifl2=ifl(2)
c      ifl(2)=0

c      if (npts.lt.501) goto 110
c                                too many pts
c       ifl(2)=-283
c       goto 88888

110   if (igen .eq. 1 .or. igen .eq. 3 .or. igen .eq. 8 .or.
     -    ifl(82) .eq. 1) goto 120
c                                 multax req'd to store tool axis vector
        ifl(2)=-284
        goto 88888

120   l=6
      if (igen.eq.1) l=3
      if (igen .eq. 4 .or. igen .gt. 8) l = 9

      it1 = 3
      if (igen .gt. 6) it1 = 21
      itpg=ifl(4)+30
      itel=1
      do 300 ix=1,npts
         call getent (a,l,itpg,itel,0)
         itel=itel+l
         if (itel.lt.36) goto 130
          itpg=itpg+1
          itel=itel-35
c                                   store point
130      call storit (a,sc136,inx136,it1,1)
         if (ifl(2).ne.0) goto 88888
         inx136=inx136+1

         if (igen.eq.1 .or. igen.eq.7 .or. igen.eq.8) goto 300
         if (igen.eq.3 .or. igen .gt. 8) goto 140
c                                   store tool axis vector
         call storit (a(4),sc137,inx137,4,1)
         if (ifl(2).ne.0) goto 88888
         inx137=inx137+1

         if (igen.lt.4) goto 300
c                                   store forward vector
140      call storit (a(l-2),sc138,inx138,4,1)
         if (ifl(2).ne.0) goto 88888
         inx138=inx138+1

300   continue
c                                    store npts in scalar variable
      token2 = sc135
      ivxsub = inx135
      call vstchk
      rest=tv+npts
      idst=2
      savid2=token2
      isvsub = ivxsub
      keyold = keyhld
      istold = ist
      ifl(9)=ifl(11)
      ifl(10)=ifl(12)
      call vstore
      iminit=0
c      ifl(2)=ifl2
      goto 99999

88888 continue

      isvinx=0
      call error(ifl(2))

99999 continue
      impg=0
      npts=0

      return
      end
C
C*********************************************************************
C*    E_SUBROUTINE     : subroutine strgpt (kst,ken,gpt)
c*       Creates points and optional vectors using the clfile motion
c*       records generated by the last motion command.
C*    PARAMETERS   
C*       INPUT  : 
C*          kst     = Starting clfile record of this motion.
C*          ken     = Ending clfile record of this motion.
C*          gpt     = Last programmed tool position and axis vector.
C*       OUTPUT :  
C*          none
C*    RETURNS      : none
C*    SIDE EFFECTS : 
C*       This routine is for use for *SET/VER,9.3 and later.
C*    WARNINGS     : none
C********************************************************************/
C
      subroutine strgpt (kst,ken,gpt)
c
      include 'com8a.com'

      common/keycom/keyold, keyhld, istold
      integer*4 keyold, keyhld
      integer*2 istold
c
      integer*2 igen
      equivalence (ifl(246),igen)
c
      integer*4 kst(2),ken(2)
c
      real*8 gpt(6)
c
      integer*2 irest(4)
      equivalence (rest,irest)
c
      logical done
      integer*2 icnt,it1,iclf,iflg
      integer*4 irec(2),irecsv(2),irecpt(2),iclw(6)
c
      real*8 tpt(9),ept(6),av(3),fv(3),dclbuf(640),tcinv(12),dsept(6)
      real*8 d1,d2,ndist
c
c...Initialize routine
c
      do 100 i=1,9,1
          tpt(i) = gpt(i)
  100 continue
      npt  =  3
      icnt = 0
      if (ifl(82) .eq. 1) npt = 6
      it1 = 3
      if (igen .gt. 6) it1 = 21
      if (ifl(73) .eq. 1) call invmx (sc(41),tcinv)
      iclf = 0
c
c...Main loop to read clfile
c
      done = .false.
      call ncl_setptr(kst,irec)
      call ncl_eqlptr(irec,ken,iflg)
      if (iflg .eq. 1) done = .true.

      do while (.not. done)
c
c...First time after GENPTS command
c...Store point coming from
c
          if (ifl(247) .eq. 1 .and. ifl(384) .ne. 1 .and.
     1        ifl(384) .ne. 2) then
              iclw(3) = 5200
              iclw(5) = 21
              do 200 i=1,9,1
                  dclbuf(i) = tpt(i)
  200         continue
              jerr = 0
c
c...Read clfile
c
          else
              call ncl_setptr(irec,irecsv)
              call clread (iclf,irec,iclw,dclbuf,jerr)
c
c......GENPTS/ARC is in effect
c......find the last continuation record
c......when circular is in effect
c
              if (ifl(384) .eq. 3 .and. iscir .eq. 1 .and.
     1            iclw(3) .ge. 5000 .and. iclw(3) .le. 5300) then
                  iclw(4) = 6
                  do while ((iclw(3) .eq. 5000 .or.
     1                       iclw(3) .eq. 5100 .or.
     2                       iclw(3) .eq. 5200 .or.
     3                       iclw(3) .eq. 5300) .and. iclw(4) .eq. 6)
                      call ncl_tstptr (irec,iflg1)
                      if (iflg1 .eq. 0) then
                          iclw(4) = 5
                      else
                          call ncl_setptr (irec,irecpt)
                          call clread (iclf,irec,iclw,dclbuf,jerr)
                          if (jerr .eq. 1) then
                              iclw(4) = 5
                          else if (iclw(4) .eq. 6) then
                              call ncl_setptr (irecpt,irecsv)
                          endif
                      endif
                  enddo
                  call ncl_setptr (irecsv,irec)
                  call clread (iclf,irec,iclw,dclbuf,jerr)
              endif
          endif
          if (jerr .eq. 1) then
              done = .true.
c
c...Circular record
c
          else if (iclw(3) .eq. 3000) then
              iscir = 1
c
c...Motion record
c
          else if (((ifl(384) .eq. 0 .or. ifl(384) .eq. 3) .and.
     1             (iclw(3) .eq. 5000 .or. iclw(3) .eq. 5100)) .or.
     1             iclw(3) .eq. 5200 .or. iclw(3) .eq. 5300 .or.
     2             ((ifl(384) .eq. 1 .or. ifl(384) .eq. 2) .and.
     3             (iclw(3) .eq. 5210 .or. iclw(3) .eq. 5310))) then
              np    = npt
              if (iclw(3) .ge. 5200) np = 21
              if (ifl(384) .eq. 1 .and. (iclw(3) .eq. 5210 .or.
     1            iclw(3) .eq. 5310) .and. ifl(274) .eq. 0) iclw(5) = 0
              ist = 1
              if (iscir .eq. 1 .and. ifl(384) .eq. 3)
     1            ist = iclw(5) - np + 1
              do 400 i=ist,iclw(5),np
                  icnt  = icnt  + 1
c
c......Get tool axis vector
c
                  if (np .gt. 3) then
c
c.........PS
c
                      if (ifl(384) .eq. 1) then
                          av(1) = dclbuf(i+12)
                          av(2) = dclbuf(i+13)
                          av(3) = dclbuf(i+14)
c
c.........DS
c
                      else if (ifl(384) .eq. 2) then
                          av(1) = dclbuf(i+18)
                          av(2) = dclbuf(i+19)
                          av(3) = dclbuf(i+20)
c
c.........TE
c
                      else
                          av(1) = dclbuf(i+3)
                          av(2) = dclbuf(i+4)
                          av(3) = dclbuf(i+5)
                      endif
                      if (ifl(73) .eq. 1 .and. ifl(247) .eq. 0)
     1                    call conent (av,tcinv,4)
                  else
                      av(1) = tpt(4)
                      av(2) = tpt(5)
                      av(3) = tpt(6)
                  endif
c
c......Get forward vector
c
                  if (iclw(3) .ge. 5200) then
                      fv(1) = dclbuf(i+6)
                      fv(2) = dclbuf(i+7)
                      fv(3) = dclbuf(i+8)
                      if (ifl(73) .eq. 1 .and. ifl(247) .eq. 0)
     1                    call conent (fv,tcinv,4)
                  else
                      ept(1) = dclbuf(i)
                      ept(2) = dclbuf(i+1)
                      ept(3) = dclbuf(i+2)
                      if (ifl(73) .eq. 1) call conent (ept,tcinv,3)
                      call vcmnvc (ept,tpt,fv)
                      call unitvc (fv,fv)
                  endif
c
c......Store PS point
c
                  if (ifl(384) .eq. 1) then
                      ept(1) = dclbuf(i+9)
                      ept(2) = dclbuf(i+10)
                      ept(3) = dclbuf(i+11)
c
c......Store DS point
c
                  else if (ifl(384) .eq. 2) then
                      ept(1) = dclbuf(i+15)
                      ept(2) = dclbuf(i+16)
                      ept(3) = dclbuf(i+17)
c
c......Store tool end point
c
                  else
                      ept(1) = dclbuf(i)
                      ept(2) = dclbuf(i+1)
                      ept(3) = dclbuf(i+2)
                  endif
c
c......Store normal vector
c
                  if (igen .eq. 7 .or. igen .eq. 9) then
                      ept(4) = av(1)
                      ept(5) = av(2)
                      ept(6) = av(3)
c
c......Store forward vector
c
                  else if (igen .eq. 8 .or. igen .eq. 10) then
                      ept(4) = fv(1)
                      ept(5) = fv(2)
                      ept(6) = fv(3)
                  endif

                  if (ifl(73) .eq. 1 .and. ifl(247) .eq. 0)
     1                call conent (ept,tcinv,3)
     
                  if (ifl(247) .eq. 0 .and. ifl(384) .eq. 2 
     x                                .and. iclw(3) .eq. 5210) then
                    d1 = ndist(ept,dsept)
                    d2 = ndist(ept(4),dsept(4))
                    if (d1 .lt. 1.d-4 .and. d2 .lt. 1.d-4) goto 400
                  endif

                  call storit (ept,sc136,inx136, it1,1)
                  if (ifl(2) .ne. 0) goto 9000
                  inx136 = inx136+1
c
c......Store tool axis vector
c
                  if (igen .eq. 2 .or. igen .eq. 4 .or. igen .eq. 10)
     1                    then
                      if (igen .lt. 9) then
                          call storit (av,sc137,inx137,4,1)
                          if (ifl(2) .ne. 0) goto 9000
                          inx137 = inx137 + 1
                      else
                          call storit (av,sc138,inx138,4,1)
                          if (ifl(2) .ne. 0) goto 9000
                          inx138 = inx138 + 1
                      endif
                  endif
c
c......Store forward vector
c
                  if (igen .eq. 3 .or. igen .eq. 4 .or. igen .eq. 9)
     1                    then
                      call storit (fv,sc138,inx138,4,1)
                      if (ifl(2) .ne. 0) goto 9000
                      inx138 = inx138 + 1
                  endif
c
c......Save last position
c
                  do 300 j=1,npt,1
                      tpt(j) = ept(j)
  300             continue

                  if (ifl(384) .eq. 2) then
                    do j=1,6
                      dsept(j) = ept(j)
                    enddo
                  endif

                  iscir = 0
  400         continue
          endif
          ifl(247) = 0
          call ncl_eqlptr(irec,ken,iflg)
          call ncl_tstptr(irec,iflg1)
          if (iflg .eq. 1 .or. iflg1 .eq. 0) done = .true.
      enddo
c
c...Store number of points
c
      if (icnt .ne. 0) then
          token2 = sc135
          ivxsub = inx135
          call vstchk
          rest = tv + icnt
          idst = 2
          savid2=token2
          isvsub = ivxsub
          keyold = keyhld
          istold = ist
          ifl(9) = ifl(11)
          ifl(10) = ifl(12)
          call vstore
      endif
c
c...End of routine
c
 8000 return
c
c...Error creating GENPTS geometry
c

 9000 continue
      isvinx = 0
      call error (ifl(2))
      go to 8000
      end

c * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      subroutine storit (b, nam,sub,it,isfl)

      include 'com8a.com'

      common/keycom/keyold, keyhld, istold
      integer*4 keyold, keyhld, sub
      integer*2 istold

      real*8 a(9),b(9)
      integer*2 it,isfl
      character*(*) nam

      integer*2 irest(4),ktv(4),itpg,itel
      equivalence (rest,irest),(tv,ktv)
      character*1 errcm1(80)
      equivalence (errcom,errcm1)
      integer*4 nclkey

      token2 = nam
      do 50 i=1,9,1
          a(i) = b(i)
   50 continue
      if (isfl .eq. 0) go to 120
      ivxsub=0
      call vstchk
      if (ityp.eq.2.and.ist.eq.14) goto 110
c                                          id has not been reserved
      ifl(2)=-88
      goto 88888
110   if (sub.le.1000000) goto 120
c                                          subscript out of range
      ifl(2)=-85
      goto 88888

120   ivxsub=sub
      call vstchk
      if (ityp.eq.2.and.ist.eq.1) goto 150

      if (ityp.eq.2.and.ist.eq.it) goto 130
c                                          id has diff't type
      ifl(2)=-89
      goto 88888

130   if (ifl(41).eq.1) goto 140
c                                          id previously def'd
      ifl(2)=-8
      goto 88888

140   continue
      itpg=ktv(1)
      itel=ktv(2)

150   continue

      savid2=token2
      isvsub = ivxsub
      keyold = keyhld
      istold = ist
c we need to determine how refsys transformation should be applied.
c      if (ifl(72).eq.1) call conent (a,sc(56),it)
      call ptgeom(it,a,nclkey,3)
      call ptdesc(nclkey,it,rest)
      irest(3)=3
      if (it .eq. 21) irest(3) = 6
      idst=it
      ifl(9)=ifl(11)
      ifl(10)=ifl(12)
      call vstore
      call blkgeo(nclkey,1)
c
c      call dspent(nclkey,it,3)
      call dspent(nclkey,it)
      goto 99999

88888 continue

      errcom=' - genpts variable '
      call expnm2 (nam,ivxsub,isv,errcm1(20))

99999 return
      end

C
C*********************************************************************
C*    E_SUBROUTINE     : subroutine strchk (kst,ken,gpt)
c*       Creates points and optional vectors using the clfile motion
c*       records generated by the last motion command.
C*    PARAMETERS   
C*       INPUT  : 
C*          kst     = Starting clfile record of this motion.
C*          ken     = Ending clfile record of this motion.
C*          gpt     = Last programmed tool position and axis vector.
C*       OUTPUT :  
C*          none
C*    RETURNS      : none
C*    SIDE EFFECTS : 
C*       none
C*    WARNINGS     : none
C********************************************************************/
C
      subroutine strchk (kst,ken,gpt)
c
      include 'com8a.com'
      include 'cmm.com'

      common/keycom/keyold, keyhld, istold
      integer*4 keyold, keyhld
      integer*2 istold
c
      integer*2 igen
      equivalence (ifl(246),igen)
c
      integer*4 kst(2),ken(2)
c
      real*8 gpt(6)
c
      integer*2 irest(4)
      equivalence (rest,irest)
c
      logical done, first
      integer*2 icnt,it1,iclf,iflg
      integer*4 irec(2),nirec(2),iclw(6)
c
      real*8 tpt(9),ept(3),av(3),fv(3),nv(3),dclbuf(640),tcinv(12)
      real*8 ept1(3),ept2(3),ept3(3),fv1(3),fv2(3),fv3(3)
      real*8 av1(3),av2(3),av3(3),nv1(3),nv2(3),nv3(3)
      real*8 d1,d2,ndist,ndot
      real*8 RADIAN
      parameter (RADIAN=57.2957795D0)
      character*64  cmmcnm
      equivalence (cmmmnm,cmmcnm)

      first = .true.
      dst = 0.0
      comax = dcos(cmmmxa/RADIAN)
      cmax = cmmmxd
      cmtol = cmmtol
      ihld = 0
c
c...Initialize routine
c
      do 100 i=1,9,1
          tpt(i) = gpt(i)
  100 continue
      npt  =  3
      icnt = 0
      if (ifl(82) .eq. 1) npt = 6
      it1 = 3
      if (igen .gt. 6) it1 = 21
      if (ifl(73) .eq. 1) call invmx (sc(41),tcinv)
      iclf = 0
c
c...Main loop to read clfile
c
      done = .false.
      call ncl_setptr(kst,irec)
      call ncl_eqlptr(irec,ken,iflg)
      if (iflg .eq. 1) done = .true.

  150 do while (.not. done)
c
c...First time after CHKPTS command
c...Store point coming from
c
          if (ifl(247) .eq. 1) then
              iclw(3) = 5200
              iclw(5) = 21
              do 200 i=1,9,1
                  dclbuf(i) = tpt(i)
  200         continue
              jerr = 0
c
c...Read clfile
c
          else
              call clread (iclf,irec,iclw,dclbuf,jerr)
          endif
          if (jerr .eq. 1) then
              done = .true.
c
c...Motion record
c
          else if (iclw(3) .eq. 5000 .or. iclw(3) .eq. 5100 .or.
     1             iclw(3) .eq. 5200 .or. iclw(3) .eq. 5300) then
              np    = npt
              if (iclw(3) .ge. 5200) np = 21
              do 400 i=1,iclw(5),np
                  icnt  = icnt  + 1
c
c......Store point
c
                  ept(1) = dclbuf(i)
                  ept(2) = dclbuf(i+1)
                  ept(3) = dclbuf(i+2)
c
c......Store tool axis vector
c
                  av(1) = dclbuf(i+3)
                  av(2) = dclbuf(i+4)
                  av(3) = dclbuf(i+5)
c
c......Store fwd vector
c
                  fv(1) = dclbuf(i+6)
                  fv(2) = dclbuf(i+7)
                  fv(3) = dclbuf(i+8)
c
c......Store normal vector to PS/DS
c
                  if(cmminm .eq. 5) then
                    nv(1) = dclbuf(i+12)
                    nv(2) = dclbuf(i+13)
                    nv(3) = dclbuf(i+14)
                  else
                    nv(1) = dclbuf(i+18)
                    nv(2) = dclbuf(i+19)
                    nv(3) = dclbuf(i+20)
                  endif
                  if (ifl(73) .eq. 1 .and. ifl(247) .eq. 0)
     1                call conent (ept,tcinv,3)
                  if(first) then
                    do 201 j=1,3,1
                      ept1(j) = ept(j)
                      fv1(j) = fv(j)
                      av1(j) = av(j)
                      nv1(j) = nv(j)
  201               continue
c
c... save the geometry in temp variables if macro is specified
c
                    if (cmmcnm .ne.' ') call savmac(ept1,fv1,av1,nv1)
                    first = .false.
                  else
                    do 202 j=1,3,1
                      ept3(j) = ept(j)
                      fv3(j) = fv(j)
                      av3(j) = av(j)
                      nv3(j) = nv(j)
  202               continue
  203               d1 = ndist(ept3,ept2)
                    dst = dst+d1
                    if (dst.ge.cmax) goto 212
                    co = ndot(fv3,fv1)
                    si = 1.0-co**2
                    si = dsqrt(si)
                    d2 = ndist(ept3,ept1)
                    if (si.lt.0.0) si = 0.0
                    crwn = d2*si/8.0
                    if (crwn.gt.cmtol) goto 212
                    if (co.lt.comax) goto 213
                    if (d1.gt.cmax) goto 213
                    co = ndot(fv3,fv2)
                    if (co.lt.comax) goto 213
                    ihld = 1
                    goto 500
  212               if (ihld.eq.0) goto 214
                    if (cmmcnm .ne.' ') call savmac(ept2,fv2,av2,nv2)
                    ihld = 0
                    do 2121 j=1,3,1
                      ept1(j) = ept2(j)
                      fv1(j) = fv2(j)
                      av1(j) = av2(j)
                      nv1(j) = nv2(j)

 2121               continue
                    dst = 0.0
                    goto 203
  213               ihld = 0
  214               do 215 j=1,3,1
                      ept1(j) = ept3(j)
                      fv1(j) = fv3(j)
                      av1(j) = av3(j)
                      nv1(j) = nv3(j)
  215               continue
                    if (cmmcnm .ne.' ') call savmac(ept3,fv3,av3,nv3)
                    dst = 0.0
                  endif
                  if (ifl(2) .ne. 0) goto 9000
c
c......Save last position
c
                  do 300 j=1,npt,1
                      tpt(j) = ept(j)
  300             continue
                  do 350 j=1,3,1
                      ept2(j) = ept(j)
                      fv2(j) = fv(j)
                      av2(j) = av(j)
                      nv2(j) = nv(j)
  350             continue
  400         continue
          endif
          call ncl_eqlptr(irec,ken,iflg)
          if (iflg .eq. 1) done = .true.
  500     ifl(247) = 0
          call ncl_tstptr(irec,iflg1)
          if (iflg1 .eq. 0) done = .true.
      enddo
      if (ihld.eq.1) call savmac(ept3,fv3,av3,nv3)
c
c...delete clfile if macro is specified
c
      if(cmmcnm .ne.' ') then
        done = .false.
        call ncl_setptr(kst,irec)
        call ncl_eqlptr(irec,ken,iflg)
        if (iflg .eq. 1) done = .true.
        call ncl_zroptr(zrec)
        if (.not.done) call cldel (iclf,irec,zrec,nirec)
      endif
c
c... save number of points
c
      token2(1:64) = '@N'
      ivxsub = 0
      call vstchk
      rest = cmmnpt
      idst = 2
      savid2 = token2
      isvsub = ivxsub

      keyold = keyhld
      istold = ist
      ifl(9) = ifl(11)
      ifl(10) = ifl(12)
      call vstore
c
c...End of routine
c
 8000 return
c
c...Error creating  geometry
c

 9000 continue
      isvinx = 0
      call error (ifl(2))
      go to 8000
      end

C
C*********************************************************************
C*    E_SUBROUTINE     : subroutine savmac(ept,fv,av,nv)
c*       saves point,and vectors to macro variables
C*    PARAMETERS   
C*       INPUT  : 
C*          ept     = point
C*          fv      = Forward Vector
C*          av      = Axis Vector
C*          nv      = Normal Vector
C*       OUTPUT :  
C*          none
C*    RETURNS      : none
C*    SIDE EFFECTS : 
C*                   none
C*    WARNINGS     : none
C********************************************************************/
C
      subroutine savmac(ept,fv,av,nv)
      include 'com.com'
      include 'cmm.com'

      real*8 ept(3),fv(3),av(3),nv(3)

      character*64 pnam,v1nam,v2nam,v3nam
      data pnam /'@P'/, v1nam /'@V1'/, v2nam /'@V2'/, v3nam /'@V3'/
      character*64  cmmcnm
      equivalence (cmmmnm,cmmcnm)
      integer*2 I3, I4,I5000
      integer*4 sub
      data I3 /3/, I4 /4/, I5000 /5000/

      cmmnpt = cmmnpt + 1
      sub = cmmnpt        
c                                   store point
      call storit (ept,pnam,sub,I3,1)
      if (ifl(2).ne.0) goto 999
c                                   store ta vec
      call storit (fv,v1nam,sub,I4,1)
      if (ifl(2).ne.0) goto 999
c                                   store fwd vec
      call storit (av,v2nam,sub,I4,1)
      if (ifl(2).ne.0) goto 999
c                                   store normal vec
      call storit (nv,v3nam,sub,I4,1)

999   return
      end
